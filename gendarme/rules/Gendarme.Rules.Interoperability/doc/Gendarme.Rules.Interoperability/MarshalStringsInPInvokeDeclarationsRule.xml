<Type Name="MarshalStringsInPInvokeDeclarationsRule" FullName="Gendarme.Rules.Interoperability.MarshalStringsInPInvokeDeclarationsRule">
  <TypeSignature Language="C#" Value="public class MarshalStringsInPInvokeDeclarationsRule : Gendarme.Framework.Rule, Gendarme.Framework.IMethodRule" />
  <AssemblyInfo>
    <AssemblyName>Gendarme.Rules.Interoperability</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Gendarme.Framework.Rule</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Gendarme.Framework.IMethodRule</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Gendarme.Framework.FxCopCompatibility("Microsoft.Globalization", "CA2101:SpecifyMarshalingForPInvokeStringArguments")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Gendarme.Framework.Solution("Add [DllImport CharSet=] on the method or [MarshalAs] on the parameter(s)")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Gendarme.Framework.Problem("Marshaling information for string types is incomplete and what is required may be different from what you expected the default to be.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            This rule warns the developer if the <code>CharSet</code> has not been specified
            for string parameters of P/Invoke method, unless if they are individually decorated
            with <code>[MarshalAs]</code> attribute. This applies to any <code>System.String</code>
            and <code>System.Text.StringBuilder</code> parameters.
            </summary>
    <remarks>To be added.</remarks>
    <example>
            Bad example:
            <code>
            [DllImport("coredll.dll")]
            static extern int SHCreateShortcut (StringBuilder szShortcut, StringBuilder szTarget);
            </code></example>
    <example>
            Good examples:
            <code>
            [DllImport("coredll.dll", CharSet = CharSet.Auto)]
            static extern int SHCreateShortcut (StringBuilder szShortcut, StringBuilder szTarget);
            [DllImport("coredll.dll")]
            static extern int SHCreateShortcut ([MarshalAs(UnmanagedType.LPTStr)] StringBuilder szShortcut,
            	[MarshalAs(UnmanagedType.LPTStr)] StringBuilder szTarget);
            </code></example>
    <example>
            Bad example:
            <code>
            [DllImport("coredll.dll")]
            static extern int SHCreateShortcut (StringBuilder szShortcut, StringBuilder szTarget);
            </code></example>
    <example>
            Good examples:
            <code>
            [DllImport("coredll.dll", CharSet = CharSet.Auto)]
            static extern int SHCreateShortcut (StringBuilder szShortcut, StringBuilder szTarget);
            [DllImport("coredll.dll")]
            static extern int SHCreateShortcut ([MarshalAs(UnmanagedType.LPTStr)] StringBuilder szShortcut,
            	[MarshalAs(UnmanagedType.LPTStr)] StringBuilder szTarget);
            </code></example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MarshalStringsInPInvokeDeclarationsRule ();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckMethod">
      <MemberSignature Language="C#" Value="public Gendarme.Framework.RuleResult CheckMethod (Mono.Cecil.MethodDefinition method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gendarme.Framework.RuleResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="Mono.Cecil.MethodDefinition" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
