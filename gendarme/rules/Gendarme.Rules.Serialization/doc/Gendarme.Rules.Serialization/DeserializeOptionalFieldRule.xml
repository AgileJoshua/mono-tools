<Type Name="DeserializeOptionalFieldRule" FullName="Gendarme.Rules.Serialization.DeserializeOptionalFieldRule">
  <TypeSignature Language="C#" Value="public class DeserializeOptionalFieldRule : Gendarme.Framework.Rule, Gendarme.Framework.ITypeRule" />
  <AssemblyInfo>
    <AssemblyName>Gendarme.Rules.Serialization</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Gendarme.Framework.Rule</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Gendarme.Framework.ITypeRule</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Gendarme.Framework.FxCopCompatibility("Microsoft.Usage", "CA2239:ProvideDeserializationMethodsForOptionalFields")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Gendarme.Framework.Solution("Add a deserialization routine, marked with [OnDeserialized], and re-compute the correct value for the optional fields.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Gendarme.Framework.Problem("Some fields are marked with [OptionalField] but the type does not provide special deserialization routines.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            This rule checks for types that have field(s) marked with <c>[OptionalField]</c>.
            Such types should take care of re-computing the value(s) when the data is deserialized
            using the <c>[OnDeserialized]</c> or <c>[OnDeserializing]</c> attributes on a method.
            This rule only applies to assemblies compiled with the .NET framework version 2.0
            (or later).
            </summary>
    <remarks>This rule is available since Gendarme 2.0</remarks>
    <example>
            Bad example:
            <code>
            [Serializable]
            public class ClassWithOptionalField {
            	[OptionalField]
            	private int optional;
            }
            </code></example>
    <example>
            Good example:
            <code>
            [Serializable]
            public class ClassWithOptionalField {
            	[OptionalField]
            	private int optional = 1;
            	[OnDeserialized]
            	private void Deserialized (StreamingContext context)
            	{
            		optional = 0;
            	}
            	[OnDeserializing]
            	private void OnDeserializing (StreamingContext context)
            	{
            		optional = 0;
            	}
            }
            </code></example>
    <example>
            Bad example:
            <code>
            [Serializable]
            public class ClassWithOptionalField {
            	[OptionalField]
            	private int optional;
            }
            </code></example>
    <example>
            Good example:
            <code>
            [Serializable]
            public class ClassWithOptionalField {
            	[OptionalField]
            	private int optional = 1;
            	[OnDeserialized]
            	private void Deserialized (StreamingContext context)
            	{
            		optional = 0;
            	}
            	[OnDeserializing]
            	private void OnDeserializing (StreamingContext context)
            	{
            		optional = 0;
            	}
            }
            </code></example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeserializeOptionalFieldRule ();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckType">
      <MemberSignature Language="C#" Value="public Gendarme.Framework.RuleResult CheckType (Mono.Cecil.TypeDefinition type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gendarme.Framework.RuleResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.Cecil.TypeDefinition" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (Gendarme.Framework.IRunner runner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runner" Type="Gendarme.Framework.IRunner" />
      </Parameters>
      <Docs>
        <param name="runner">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
