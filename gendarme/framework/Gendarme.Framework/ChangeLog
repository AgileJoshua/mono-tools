2008-05-24  Sebastien Pouliot  <sebastien@ximian.com>

	* Defect.cs: Add new ctor without a string text parameter (since
	we encourage not to use it unless it provide extra, non-static 
	and useful information). Simplify ctor accepting Instruction.
	* IRunner.cs, Runner.cs: Reduce number of Report overloads by 
	using IMetadataTokenProvider. Convert some comments into XML
	documentation.

2008-05-19  Jb Evain  <jbevain@novell.com>

	* IRunner.cs, Runner.cs: add a Report method that takes
	a PropertyDefinition. Fixes the build.

2008-05-17  Sebastien Pouliot  <sebastien@ximian.com>

	* Runner.cs: Delegate symbols loading to rocks.

2008-05-11  Sebastien Pouliot  <sebastien@ximian.com>

	* IRunner.cs: Add a Report overload for EventDefinition.
	* Runner.cs: Set and Clear Resolver cache (to reuse the runner).
	Implement Report(EventDefinition...)

2008-05-10  Sebastien Pouliot  <sebastien@ximian.com>

	* RunnerEventArgs.cs: Change setters to public since TestRunner
	needs them.
	* TestRunner.cs: Moving to Test.Rules.dll

2008-05-06  Sebastien Pouliot  <sebastien@ximian.com>

	* Defect.cs: Split debugging symbols resolution out of here.
	* Symbols.cs: New. Symbols stuff moved here.

2008-04-25  Sebastien Pouliot  <sebastien@ximian.com>

	* Defect.cs: Deal with the special 0xFEEFEE value present in PDB 
	files (for hidden or special case where the compiler does not want
	the debugger to look in).

2008-04-18  Sebastien Pouliot  <sebastien@ximian.com>

	* Runner.cs: Reset the events. The wizard runner can reuse the 
	runner with a different rule set.

2008-03-15  Sebastien Pouliot  <sebastien@ximian.com>

	* Runner.cs: Don't initialize rules that are not active. This is
	useful when a runner decides to load a rule (e.g. to get more 
	information about it) then decide not to use it (think UI ;-). 
	This also makes it easier (well no change) to continue using 
	Active for rule optimizations.

2008-03-08  Sebastien Pouliot  <sebastien@ximian.com>

	* Rule.cs: Cache Type. This saves 2% (about 16mb) of the memory 
	required to process all Mono 2.0 assemblies.

2008-03-07  Sebastien Pouliot  <sebastien@ximian.com>

	* TestRunner.cs: Add methods to allow easier testing of the 
	events.

2008-03-04  Sebastien Pouliot  <sebastien@ximian.com>

	* Rule.cs: Reduce code duplication between Problem and Solution
	properties.

2008-03-03  Sebastien Pouliot  <sebastien@ximian.com>

	* BasicIgnoreList.cs: Seal inner class.
	* Runner.cs: Add back code removed in last commit.

2008-02-17  Sebastien Pouliot  <sebastien@ximian.com>

	* BasicIgnoreList.cs: Basic implementation, with storage, for
	keeping an ignore list.
	* IIgnoreList.cs: New. Interface to ignorance ;-)
	* IRule.cs: Add FullName.
	* Rule.cs: Implement FullName using the type full name.
	* Runner.cs: Add support to ignore some known defects (or false 
	positives).
	* TestRunner.cs: Implement IIgnoreList.

2008-02-16  Sebastien Pouliot  <sebastien@ximian.com>

	* AssemblyResolver.cs: Fix NRE when resolving some methods
	* Defect.cs: Make ExtractFirst methods static. Rename 
	Get[Type|Method]FromLocation to Find*
	* Runner.cs: Handle case where MDB is unavailable.
	* TestRunner.cs: Avoid code duplication in Check* methods.

2008-02-15  Sebastien Pouliot  <sebastien@ximian.com>

	* AssemblyResolver.cs: Handle GenericParameter.
	* Runner.cs: Handle the case where Mono.Cecil.Mdb.dll is not
	available.

2008-02-15  Sebastien Pouliot  <sebastien@ximian.com> 

	* Runner.cs: Expose CurrentRule and CurrentTarget
	* TestRunner.cs: Use newly exposed properties.

2008-02-15  Sebastien Pouliot  <sebastien@ximian.com>

	* MethodSignature.cs
	* MethodSignatures.cs
	* StackEntryAnalysis.cs:
		Moved into Gendarme.Framework.Helpers

2008-02-15  Sebastien Pouliot  <sebastien@ximian.com>

	* Runner.cs: Use Rocks to iterate all methods in a type.

2008-02-14  Sebastien Pouliot  <sebastien@ximian.com>

	* AssemblyResolver.cs: Shameless copy of Linker AssemblyResolver
	(with minimal changes) until Cecil got his own. Gendarme resolve
	will be done using rocks (so changes should not affect rules)

2008-02-14  Sebastien Pouliot  <sebastien@ximian.com> 

	* Defect.cs: Remove IMetadataTokenProviderRock (moved to 
	CecilRocks.cs). Add more logic to find source code associated
	with the defect (even if we don't have the instruction for it).
	* MinimalRunner.cs: Removed.
	* Runner.cs: Make some stuff internal for TestRunner.cs
	* TestRunner.cs: New. Runner useful for unit testing as it has
	some internal knowledge about Runner state and provide helpers.

2008-02-13  Sebastien Pouliot  <sebastien@ximian.com> 

	* Defect.cs: Merge Defect and Defect<T> into a non-generic class.
	* MinimalRunner.cs: Move Reset method to Runner.
	* Runner.cs: Adapt for Defect changes and add Reset method.

2008-02-12  Sebastien Pouliot  <sebastien@ximian.com> 

	* Defect.cs: Fix exception argument.
	* IRunner.cs: [ComVisible (false)] at class level (to be moved 
	to assembly-level). Use Cecil's IAnnotationProvider and change 
	back Assemblies to Collection<AssemblyDefinition>. Remove the 
	need to supply IRule to Report overloads (the runner knows which
	rules it is). Add CurrentRuleResult so it's easier to track 
	Success and Failure when writing a rule.
	* MinimalRunner.cs: Add Reset method to help unit testing.
	* Rule.cs: Call String.Format with CultureInfo.InvariantCulture
	* Runner.cs: Implement changes required by IRunner. Make use of
	of On[Assembly|Type|Method] to execute rules. Simplify Run.
	* RunnerEventArgs.cs: Change setters to internal. Rules are not
	allowed to play with those values.

2008-02-12  Sebastien Pouliot  <sebastien@ximian.com>

	* Rule.cs: Renamed similar fields (smell) and don't throw an 
	exception inside Problem and Solution properties (but return a
	string that makes the lack of attribute clear).

2008-02-12  Sebastien Pouliot  <sebastien@ximian.com> 

	* Rule.cs: Throw an exception if we try to use Problem or Solution 
	on a rule without the needed attributes. Change Uri property to look
	for DocumentUriAttribute. Make Active property usable.

2008-02-12  Nestor Salceda  <nestor.salceda@gmail.com>

	* DocumentationUriAttribute.cs, ProblemAttribute.cs, 
	SolutionAttribute.cs: New files for the next version of the 
	framework. Work in progress.

2008-02-12  Sebastien Pouliot  <sebastien@ximian.com>

	* Confidence.cs, Defect.cs, IAssemblyRule.cs, IMethodRule.cs, 
	IRule.cs, IRunner.cs, ITypeRule.cs, MinimalRunner.cs, Rule.cs,
	RuleResult.cs, Runner.cs, RunnerEventArgs.cs, Severity.cs: New files
	for the next version of the framework. Work in progress.

2008-01-30  Sebastien Pouliot  <sebastien@ximian.com>

	* StackEntryAnalysis.cs: Shared class to analyse the stack by 
	Andreas Noever.

2008-01-28  Sebastien Pouliot  <sebastien@ximian.com>

	* MethodSignature.cs: Modify API to ensure objects are immutable 
	once created since we expose them as read-only in MethodSignatures.
	Note: we need to rule to automate this check!

2008-01-24  Sebastien Pouliot  <sebastien@ximian.com>

	* MethodSignature.cs: Override ToString as this can be useful when 
	reporting errors/warning.
	* MethodSignatures.cs: Add GetHashCode and ToString, remove virtual 
	from Equals (since it should happen to any of them, even "new" ones).

2008-01-23  Sebastien Pouliot  <sebastien@ximian.com>

	* MethodSignatures.cs: Change [No|One|Two]Parameter[s] to private
	to avoid ArrayFieldsShouldNotBeReadOnlyRule on self-test.

2008-01-18  Sebastien Pouliot  <sebastien@ximian.com>

	* MethodSignature.cs: Allow to find a method using a signature
	[Andreas Noever]
	* MethodSignatures.cs: Various method signature to be used, and 
	shared, by rules [Andreas Noever]
