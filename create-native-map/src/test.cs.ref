/*
 * This file was automatically generated by create-native-map from TestMap.dll.
 *
 * DO NOT MODIFY.
 */

using System;
using System.Runtime.InteropServices;
using Mono.Unix.Native;

namespace Mono.Unix.Native {

	public sealed /* static */ partial class NativeConvert
	{
		private NativeConvert () {}

		private const string LIB = "NativeLib";

		private static void ThrowArgumentException (object value)
		{
			throw new ArgumentOutOfRangeException ("value", value,
				Locale.GetText ("Current platform doesn't support this value."));
		}

		[DllImport (LIB, EntryPoint="MakeMap_Test_FromFoo")]
		private static extern int FromFoo (ref Foo source, IntPtr destination);

		public static bool TryCopy (ref Foo source, IntPtr destination)
		{
			return FromFoo (ref source, destination) == 0;
		}

		[DllImport (LIB, EntryPoint="MakeMap_Test_ToFoo")]
		private static extern int ToFoo (IntPtr source, out Foo destination);

		public static bool TryCopy (IntPtr source, out Foo destination)
		{
			return ToFoo (source, out destination) == 0;
		}

		[DllImport (LIB, EntryPoint="MakeMap_Test_FromFooHolder")]
		private static extern int FromFooHolder (ref FooHolder source, IntPtr destination);

		public static bool TryCopy (ref FooHolder source, IntPtr destination)
		{
			return FromFooHolder (ref source, destination) == 0;
		}

		[DllImport (LIB, EntryPoint="MakeMap_Test_ToFooHolder")]
		private static extern int ToFooHolder (IntPtr source, out FooHolder destination);

		public static bool TryCopy (IntPtr source, out FooHolder destination)
		{
			return ToFooHolder (source, out destination) == 0;
		}

		[DllImport (LIB, EntryPoint="MakeMap_Test_FromTestEnum")]
		private static extern int FromTestEnum (TestEnum value, out Int32 rval);

		public static bool TryFromTestEnum (TestEnum value, out Int32 rval)
		{
			return FromTestEnum (value, out rval) == 0;
		}

		public static Int32 FromTestEnum (TestEnum value)
		{
			Int32 rval;
			if (FromTestEnum (value, out rval) == -1)
				ThrowArgumentException (value);
			return rval;
		}

		[DllImport (LIB, EntryPoint="MakeMap_Test_ToTestEnum")]
		private static extern int ToTestEnum (Int32 value, out TestEnum rval);

		public static bool TryToTestEnum (Int32 value, out TestEnum rval)
		{
			return ToTestEnum (value, out rval) == 0;
		}

		public static TestEnum ToTestEnum (Int32 value)
		{
			TestEnum rval;
			if (ToTestEnum (value, out rval) == -1)
				ThrowArgumentException (value);
			return rval;
		}

		[DllImport (LIB, EntryPoint="MakeMap_Rename_FromColors")]
		private static extern int FromColors (Colors value, out Int32 rval);

		public static bool TryFromColors (Colors value, out Int32 rval)
		{
			return FromColors (value, out rval) == 0;
		}

		public static Int32 FromColors (Colors value)
		{
			Int32 rval;
			if (FromColors (value, out rval) == -1)
				ThrowArgumentException (value);
			return rval;
		}

		[DllImport (LIB, EntryPoint="MakeMap_Rename_ToColors")]
		private static extern int ToColors (Int32 value, out Colors rval);

		public static bool TryToColors (Int32 value, out Colors rval)
		{
			return ToColors (value, out rval) == 0;
		}

		public static Colors ToColors (Int32 value)
		{
			Colors rval;
			if (ToColors (value, out rval) == -1)
				ThrowArgumentException (value);
			return rval;
		}

	}
}

