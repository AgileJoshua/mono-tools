// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------



public partial class MainWindow {
    
    private Gtk.UIManager UIManager;
    
    private Gtk.Action ProfileAction;
    
    private Gtk.Action QuitAction;
    
    private Gtk.Action SaveAsAction;
    
    private Gtk.Action RunAction;
    
    private Gtk.Action ExecuteAction;
    
    private Gtk.Action NewAction;
    
    private Gtk.VBox vbox1;
    
    private Gtk.MenuBar menubar1;
    
    private Gtk.Toolbar toolbar1;
    
    private Gtk.ScrolledWindow GtkScrolledWindow;
    
    private Gtk.TreeView view;
    
    protected virtual void Build() {
        Stetic.Gui.Initialize(this);
        // Widget MainWindow
        this.UIManager = new Gtk.UIManager();
        Gtk.ActionGroup w1 = new Gtk.ActionGroup("Default");
        this.ProfileAction = new Gtk.Action("ProfileAction", Mono.Unix.Catalog.GetString("_Profile"), null, null);
        this.ProfileAction.ShortLabel = Mono.Unix.Catalog.GetString("_File");
        w1.Add(this.ProfileAction, null);
        this.QuitAction = new Gtk.Action("QuitAction", Mono.Unix.Catalog.GetString("_Quit"), null, "gtk-quit");
        this.QuitAction.ShortLabel = Mono.Unix.Catalog.GetString("_Quit");
        w1.Add(this.QuitAction, null);
        this.SaveAsAction = new Gtk.Action("SaveAsAction", Mono.Unix.Catalog.GetString("Save _As"), null, "gtk-save-as");
        this.SaveAsAction.ShortLabel = Mono.Unix.Catalog.GetString("Save _As");
        w1.Add(this.SaveAsAction, null);
        this.RunAction = new Gtk.Action("RunAction", Mono.Unix.Catalog.GetString("_Run"), null, null);
        this.RunAction.ShortLabel = Mono.Unix.Catalog.GetString("_Run");
        w1.Add(this.RunAction, null);
        this.ExecuteAction = new Gtk.Action("ExecuteAction", Mono.Unix.Catalog.GetString("_Execute"), null, "gtk-execute");
        this.ExecuteAction.ShortLabel = Mono.Unix.Catalog.GetString("_Execute");
        w1.Add(this.ExecuteAction, null);
        this.NewAction = new Gtk.Action("NewAction", Mono.Unix.Catalog.GetString("_New"), null, "gtk-new");
        this.NewAction.ShortLabel = Mono.Unix.Catalog.GetString("_New");
        w1.Add(this.NewAction, null);
        this.UIManager.InsertActionGroup(w1, 0);
        this.AddAccelGroup(this.UIManager.AccelGroup);
        this.Name = "MainWindow";
        this.Title = Mono.Unix.Catalog.GetString("Mono Visual Profiler");
        this.WindowPosition = ((Gtk.WindowPosition)(4));
        // Container child MainWindow.Gtk.Container+ContainerChild
        this.vbox1 = new Gtk.VBox();
        this.vbox1.Name = "vbox1";
        this.vbox1.Spacing = 6;
        // Container child vbox1.Gtk.Box+BoxChild
        this.UIManager.AddUiFromString("<ui><menubar name='menubar1'><menu name='ProfileAction' action='ProfileAction'><menuitem name='NewAction' action='NewAction'/><menuitem name='SaveAsAction' action='SaveAsAction'/><menuitem name='QuitAction' action='QuitAction'/></menu></menubar></ui>");
        this.menubar1 = ((Gtk.MenuBar)(this.UIManager.GetWidget("/menubar1")));
        this.menubar1.Name = "menubar1";
        this.vbox1.Add(this.menubar1);
        Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox1[this.menubar1]));
        w2.Position = 0;
        w2.Expand = false;
        w2.Fill = false;
        // Container child vbox1.Gtk.Box+BoxChild
        this.UIManager.AddUiFromString("<ui><toolbar name='toolbar1'><toolitem name='NewAction' action='NewAction'/><toolitem name='SaveAsAction' action='SaveAsAction'/><toolitem name='QuitAction' action='QuitAction'/></toolbar></ui>");
        this.toolbar1 = ((Gtk.Toolbar)(this.UIManager.GetWidget("/toolbar1")));
        this.toolbar1.Name = "toolbar1";
        this.toolbar1.ShowArrow = false;
        this.toolbar1.ToolbarStyle = ((Gtk.ToolbarStyle)(0));
        this.vbox1.Add(this.toolbar1);
        Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox1[this.toolbar1]));
        w3.Position = 1;
        w3.Expand = false;
        w3.Fill = false;
        // Container child vbox1.Gtk.Box+BoxChild
        this.GtkScrolledWindow = new Gtk.ScrolledWindow();
        this.GtkScrolledWindow.Name = "GtkScrolledWindow";
        this.GtkScrolledWindow.ShadowType = ((Gtk.ShadowType)(1));
        // Container child GtkScrolledWindow.Gtk.Container+ContainerChild
        this.view = new Gtk.TreeView();
        this.view.CanFocus = true;
        this.view.Name = "view";
        this.GtkScrolledWindow.Add(this.view);
        this.vbox1.Add(this.GtkScrolledWindow);
        Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox1[this.GtkScrolledWindow]));
        w5.Position = 2;
        this.Add(this.vbox1);
        if ((this.Child != null)) {
            this.Child.ShowAll();
        }
        this.DefaultWidth = 404;
        this.DefaultHeight = 300;
        this.Show();
        this.QuitAction.Activated += new System.EventHandler(this.OnQuitActivated);
        this.SaveAsAction.Activated += new System.EventHandler(this.OnSaveAsActivated);
        this.NewAction.Activated += new System.EventHandler(this.OnNewActivated);
    }
}
